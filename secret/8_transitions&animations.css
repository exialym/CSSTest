@keyframes bounce {
  60%, 80%, to {
    transform: translateY(400px);
    animation-timing-function: ease-out; }
  70% {
    transform: translateY(300px); }
  90% {
    transform: translateY(360px); } }
.ball {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background-color: #0074d9;
  animation: bounce 3s cubic-bezier(1, -0.8, 0, 1.64); }

input:not(:focus) + .callout:not(:hover) {
  transform: scale(0);
  transition: .25s transform; }

.callout {
  transition: 0.5s cubic-bezier(0.25, 0.1, 0.3, 1.5) transform;
  transform-origin: 1.4em -.4em; }

.callout {
  position: absolute;
  max-width: 14em;
  padding: .6em .8em;
  border-radius: .3em;
  margin: .3em 0 0 -.2em;
  background: #fed;
  border: 1px solid rgba(0, 0, 0, 0.3);
  box-shadow: 0.05em 0.2em 0.6em rgba(0, 0, 0, 0.2);
  font-size: 75%; }

.callout:before {
  content: "";
  position: absolute;
  top: -.4em;
  left: 1em;
  padding: .35em;
  background: inherit;
  border: inherit;
  border-right: 0;
  border-bottom: 0;
  transform: rotate(45deg); }

@keyframes loader {
  to {
    background-position: -800px 0; } }
.loader {
  width: 100px;
  height: 100px;
  text-indent: 999px;
  overflow: hidden;
  /* Hide text */
  background: url(../img/loader.png) 0 0;
  animation: loader 1s infinite steps(8); }

@keyframes blink-smooth {
  to {
    color: transparent; } }
.highlight {
  animation: .5s blink-smooth 6 alternate; }

@keyframes typing {
  from {
    width: 0; } }
@keyframes caret {
  50% {
    border-color: currentColor; } }
#typeEffect {
  width: 15ch;
  /* Width of text */
  overflow: hidden;
  white-space: nowrap;
  border-right: .05em solid transparent;
  animation: typing 6s steps(15), caret 1s steps(1) infinite; }

@keyframes test {
  to {
    width: 400px; } }
#testAnimation {
  height: 100px;
  width: 300px;
  background-color: #0074d9;
  color: #fff; }

#testAnimation:hover {
  animation: test 2s; }

#testTransition {
  height: 100px;
  width: 300px;
  background-color: #0074d9;
  transition: 2s width;
  color: #fff; }

#testTransition:hover {
  width: 400px; }

@keyframes panoramic {
  to {
    background-position: 100% 0; } }
.panoramic {
  width: 150px;
  height: 150px;
  background: url("../img/tiger.jpg");
  background-size: auto 100%;
  animation: panoramic 10s linear infinite alternate;
  animation-play-state: paused; }

.panoramic:hover, .panoramic:focus {
  animation-play-state: running; }

.path {
  width: 300px;
  height: 300px;
  border-radius: 50%;
  background-color: #ffbb33;
  text-align: center; }

@keyframes spin {
  to {
    transform: rotate(1turn); } }
.avatar {
  animation: spin 3s infinite linear;
  transform-origin: 150px 150px;
  /* 150px = path radius */ }

.avatar > img {
  animation: inherit;
  animation-direction: reverse; }

@keyframes spin1 {
  from {
    transform: translate(50%, 150px) rotate(0turn) translate(-50%, -150px) translate(50%, 50%) rotate(1turn) translate(-50%, -50%); }
  to {
    transform: translate(50%, 150px) rotate(1turn) translate(-50%, -150px) translate(50%, 50%) rotate(0turn) translate(-50%, -50%); } }
.onlyEle .avatar {
  animation: spin1 3s infinite linear; }

/*# sourceMappingURL=8_transitions&animations.css.map */
